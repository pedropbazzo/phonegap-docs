// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var BrowserSyncPlugin, _ref;
    return BrowserSyncPlugin = (function(_super) {
      __extends(BrowserSyncPlugin, _super);

      function BrowserSyncPlugin() {
        _ref = BrowserSyncPlugin.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      BrowserSyncPlugin.prototype.name = 'browsersync';

      BrowserSyncPlugin.prototype.config = {
        files: false,
        open: false
      };

      BrowserSyncPlugin.prototype.serverAfter = function(opts) {
        var address, bsConfig, serverHostname, serverLocation, serverPort;
        address = opts.serverHttp.address();
        serverHostname = address.address;
        if (serverHostname === '::') {
          serverHostname = 'localhost';
        }
        serverPort = address.port;
        serverLocation = 'http://' + serverHostname + ':' + serverPort + '/';
        this.browserSync = require('browser-sync');
        bsConfig = this.getConfig();
        bsConfig.proxy = serverLocation;
        return this.browserSync(bsConfig);
      };

      BrowserSyncPlugin.prototype.generateAfter = function() {
        if (this.browserSync != null) {
          this.browserSync.reload();
        }
        return this;
      };

      return BrowserSyncPlugin;

    })(BasePlugin);
  };

}).call(this);
